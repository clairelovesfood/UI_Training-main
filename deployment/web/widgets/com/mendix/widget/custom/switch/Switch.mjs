import{Children as e,createElement as t,useCallback as a}from"react";import"react-dom";var i;!function(e){e.Number="number",e.DateTime="datetime"}(i||(i={}));var n,r={exports:{}};
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/n=r,function(){var e={}.hasOwnProperty;function t(){for(var a=[],i=0;i<arguments.length;i++){var n=arguments[i];if(n){var r=typeof n;if("string"===r||"number"===r)a.push(n);else if(Array.isArray(n)&&n.length){var l=t.apply(null,n);l&&a.push(l)}else if("object"===r)for(var o in n)e.call(n,o)&&n[o]&&a.push(o)}}return a.join(" ")}n.exports?(t.default=t,n.exports=t):window.classNames=t}();var l=r.exports;const o=({className:a,bootstrapStyle:i,children:n})=>e.count(n)>0?t("div",{className:l("alert alert-".concat(i),a)},n):null;function c(e){var a;return t("div",{className:"widget-switch"},t("div",{id:e.id,className:l("widget-switch-btn-wrapper","widget-switch-btn-wrapper-default",{checked:e.isChecked,disabled:!e.editable,"un-checked":!e.isChecked}),onClick:e.onClick,onKeyDown:e.onKeyDown,tabIndex:null!==(a=e.tabIndex)&&void 0!==a?a:0,role:"switch","aria-checked":e.isChecked,"aria-labelledby":"".concat(e.id,"-label"),"aria-readonly":!e.editable},t("div",{className:l("widget-switch-btn",{left:!e.isChecked,right:e.isChecked})})),t(o,{bootstrapStyle:"danger"},e.validation))}function s(e){const i=(n=e.booleanAttribute)&&"available"===n.status&&n.value;var n;const r=!e.booleanAttribute.readOnly,l=a((()=>{var t;e.booleanAttribute.setValue(!e.booleanAttribute.value),(t=e.action)&&t.canExecute&&!t.isExecuting&&t.execute()}),[e.action,e.booleanAttribute]),o=a((e=>{e.preventDefault(),r&&l()}),[r,l]),s=a((e=>{e.preventDefault(),r&&" "===e.key&&l()}),[r,l]);return t(c,{onClick:o,onKeyDown:s,isChecked:i,editable:r,validation:e.booleanAttribute.validation,id:e.id,tabIndex:e.tabIndex})}o.displayName="Alert";export{s as Switch};
